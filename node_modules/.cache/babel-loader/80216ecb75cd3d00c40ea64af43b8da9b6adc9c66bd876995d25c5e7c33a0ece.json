{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis Ibarra\\\\Documents\\\\Tareas\\\\Seguridad informatica\\\\webCifrado\\\\cifrado\\\\src\\\\CifradoCesar.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CifradoCesar = () => {\n  _s();\n  const [message, setMessage] = useState(''); // Estado para el mensaje ingresado\n  const [shift, setShift] = useState(0); // Estado para la clave de desplazamiento\n  const [outputMessage, setOutputMessage] = useState(''); // Estado para el mensaje cifrado o descifrado\n\n  // Función para aplicar el Cifrado César (cifrado o descifrado)\n  const caesarCipher = (str, shift, isEncrypting) => {\n    const direction = isEncrypting ? 1 : -1; // Definir dirección para cifrar o descifrar\n    return str.split('').map(char => {\n      if (/[a-zA-Z]/.test(char)) {\n        const base = char === char.toLowerCase() ? 97 : 65; // Código ASCII de 'a' o 'A'\n        return String.fromCharCode((char.charCodeAt(0) - base + direction * shift + 26) % 26 + base);\n      }\n      return char; // Devolver otros caracteres (como espacios o símbolos) sin modificar\n    }).join('');\n  };\n\n  // Función que se ejecuta al hacer clic en el botón de cifrar o descifrar\n  const handleAction = isEncrypting => {\n    if (!message.trim()) {\n      toast.error(\"El mensaje no puede estar vacío\");\n      return;\n    }\n    const parsedShift = parseInt(shift, 10);\n    if (isNaN(parsedShift) || parsedShift < 1) {\n      toast.error(\"La clave debe ser un número mayor que 0\");\n      return;\n    }\n    const result = caesarCipher(message, parsedShift, isEncrypting);\n    setOutputMessage(result);\n    toast.success(isEncrypting ? \"Mensaje cifrado correctamente!\" : \"Mensaje descifrado correctamente!\");\n  };\n\n  // Función para copiar el mensaje\n  const handleCopy = () => {\n    if (!outputMessage) {\n      toast.error(\"No hay mensaje para copiar\");\n      return;\n    }\n    navigator.clipboard.writeText(outputMessage);\n    toast.success('Mensaje copiado correctamente!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cifrado C\\xE9sar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Ingresa el mensaje:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ej: Hola\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Cantidad de desplazamiento:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Clave (desplazamiento)\",\n        value: shift,\n        onChange: e => setShift(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleAction(true) // Pasamos true para cifrar\n        ,\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Cifrar Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleAction(false) // Pasamos false para descifrar\n        ,\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Descifrar Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), outputMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        children: \"Mensaje Cifrado / Descifrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: outputMessage,\n        style: {\n          width: \"300px\",\n          height: \"100px\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          resize: \"none\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          marginBottom: \"10px\" // Espacio entre el texto y el botón\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCopy,\n          variant: \"contained\",\n          color: \"success\",\n          children: \"Copiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(CifradoCesar, \"MhIQGETjxwG3MXycYnqBtAHrHmw=\");\n_c = CifradoCesar;\nexport { CifradoCesar };\nvar _c;\n$RefreshReg$(_c, \"CifradoCesar\");","map":{"version":3,"names":["useState","toast","Button","jsxDEV","_jsxDEV","CifradoCesar","_s","message","setMessage","shift","setShift","outputMessage","setOutputMessage","caesarCipher","str","isEncrypting","direction","split","map","char","test","base","toLowerCase","String","fromCharCode","charCodeAt","join","handleAction","trim","error","parsedShift","parseInt","isNaN","result","success","handleCopy","navigator","clipboard","writeText","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","width","fontSize","onClick","variant","color","marginRight","marginTop","readOnly","height","resize","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Luis Ibarra/Documents/Tareas/Seguridad informatica/webCifrado/cifrado/src/CifradoCesar.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CifradoCesar = () => {\r\n    const [message, setMessage] = useState(''); // Estado para el mensaje ingresado\r\n    const [shift, setShift] = useState(0); // Estado para la clave de desplazamiento\r\n    const [outputMessage, setOutputMessage] = useState(''); // Estado para el mensaje cifrado o descifrado\r\n\r\n    // Función para aplicar el Cifrado César (cifrado o descifrado)\r\n    const caesarCipher = (str, shift, isEncrypting) => {\r\n        const direction = isEncrypting ? 1 : -1; // Definir dirección para cifrar o descifrar\r\n        return str\r\n        .split('')\r\n        .map((char) => {\r\n            if (/[a-zA-Z]/.test(char)) {\r\n                const base = char === char.toLowerCase() ? 97 : 65; // Código ASCII de 'a' o 'A'\r\n                return String.fromCharCode(\r\n                    ((char.charCodeAt(0) - base + direction * shift + 26) % 26) + base\r\n                );\r\n            }\r\n            return char; // Devolver otros caracteres (como espacios o símbolos) sin modificar\r\n        })\r\n        .join('');\r\n    };\r\n\r\n    // Función que se ejecuta al hacer clic en el botón de cifrar o descifrar\r\n    const handleAction = (isEncrypting) => {\r\n        if (!message.trim()) {\r\n            toast.error(\"El mensaje no puede estar vacío\");\r\n            return;\r\n        }\r\n\r\n        const parsedShift = parseInt(shift, 10);\r\n        if (isNaN(parsedShift) || parsedShift < 1) {\r\n            toast.error(\"La clave debe ser un número mayor que 0\");\r\n            return;\r\n        }\r\n\r\n        const result = caesarCipher(message, parsedShift, isEncrypting);\r\n        setOutputMessage(result);\r\n        toast.success(isEncrypting ? \"Mensaje cifrado correctamente!\" : \"Mensaje descifrado correctamente!\");\r\n    };\r\n\r\n    // Función para copiar el mensaje\r\n    const handleCopy = () => {\r\n        if (!outputMessage) {\r\n            toast.error(\"No hay mensaje para copiar\");\r\n            return;\r\n        }\r\n        navigator.clipboard.writeText(outputMessage);\r\n        toast.success('Mensaje copiado correctamente!');\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\", textAlign: \"center\" }}>\r\n            <h1>Cifrado César</h1>\r\n            <text>Ingresa el mensaje:</text>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Ej: Hola\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <text>Cantidad de desplazamiento:</text>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Clave (desplazamiento)\"\r\n                    value={shift}\r\n                    onChange={(e) => setShift(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <Button\r\n                    onClick={() => handleAction(true)} // Pasamos true para cifrar\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginRight: \"10px\" }}\r\n                >\r\n                    Cifrar Mensaje\r\n                </Button>\r\n                <Button\r\n                    onClick={() => handleAction(false)} // Pasamos false para descifrar\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                >\r\n                    Descifrar Mensaje\r\n                </Button>\r\n            </div>\r\n            \r\n            {outputMessage && (\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <text>Mensaje Cifrado / Descifrado</text>\r\n                    <textarea\r\n                        readOnly\r\n                        value={outputMessage}\r\n                        style={{\r\n                        width: \"300px\",\r\n                        height: \"100px\",\r\n                        padding: \"10px\",\r\n                        fontSize: \"16px\",\r\n                        resize: \"none\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px\",\r\n                        marginBottom: \"10px\", // Espacio entre el texto y el botón\r\n                        }}\r\n                    />\r\n                    <div>\r\n                        <Button\r\n                            onClick={handleCopy}\r\n                            variant=\"contained\"\r\n                            color=\"success\"\r\n                        >\r\n                            Copiar\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { CifradoCesar };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}