{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis Ibarra\\\\Documents\\\\Tareas\\\\Seguridad informatica\\\\webCifrado\\\\cifrado\\\\src\\\\CifradoCesar.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CifradoCesar = () => {\n  _s();\n  const [message, setMessage] = useState(''); // Estado para el mensaje ingresado\n  const [shift, setShift] = useState(0); // Estado para la clave de desplazamiento\n  const [outputMessage, setOutputMessage] = useState(''); // Estado para el mensaje cifrado o descifrado\n\n  // Función para aplicar el Cifrado César (cifrado o descifrado)\n  const caesarCipher = (str, shift, isEncrypting) => {\n    const direction = isEncrypting ? 1 : -1; // Definir dirección para cifrar o descifrar\n    return str.split('').map(char => {\n      if (/[a-zA-Z]/.test(char)) {\n        const base = char === char.toLowerCase() ? 97 : 65; // Código ASCII de 'a' o 'A'\n        return String.fromCharCode((char.charCodeAt(0) - base + direction * shift + 26) % 26 + base);\n      }\n      return char; // Devolver otros caracteres (como espacios o símbolos) sin modificar\n    }).join('');\n  };\n\n  // Función que se ejecuta al hacer clic en el botón de cifrar o descifrar\n  const handleAction = isEncrypting => {\n    const result = caesarCipher(message, parseInt(shift, 10), isEncrypting);\n    setOutputMessage(result);\n    toast.success(isEncrypting ? \"Mensaje cifrado correctamente!\" : \"Mensaje descifrado correctamente!\");\n  };\n\n  // Función para copiar el mensaje\n  const handleCopy = () => {\n    navigator.clipboard.writeText(outputMessage);\n    toast.success('Mensaje copiado correctamente!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cifrado C\\xE9sar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Ingresa el mensaje:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ej: Hola\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Cantidad de desplazamiento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Clave (desplazamiento)\",\n        value: shift,\n        onChange: e => setShift(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAction(true) // Pasamos true para cifrar\n        ,\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          marginRight: \"10px\"\n        },\n        children: \"Cifrar Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAction(false) // Pasamos false para descifrar\n        ,\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\"\n        },\n        children: \"Descifrar Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Mensaje Cifrado / Descifrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), outputMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: outputMessage,\n        style: {\n          width: \"300px\",\n          height: \"100px\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          resize: \"none\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          marginBottom: \"10px\" // Espacio entre el texto y el botón\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCopy,\n          variant: \"contained\",\n          children: \"Copiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(CifradoCesar, \"MhIQGETjxwG3MXycYnqBtAHrHmw=\");\n_c = CifradoCesar;\nexport { CifradoCesar };\nvar _c;\n$RefreshReg$(_c, \"CifradoCesar\");","map":{"version":3,"names":["useState","toast","Button","jsxDEV","_jsxDEV","CifradoCesar","_s","message","setMessage","shift","setShift","outputMessage","setOutputMessage","caesarCipher","str","isEncrypting","direction","split","map","char","test","base","toLowerCase","String","fromCharCode","charCodeAt","join","handleAction","result","parseInt","success","handleCopy","navigator","clipboard","writeText","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","width","fontSize","onClick","marginRight","marginTop","readOnly","height","resize","border","borderRadius","variant","_c","$RefreshReg$"],"sources":["C:/Users/Luis Ibarra/Documents/Tareas/Seguridad informatica/webCifrado/cifrado/src/CifradoCesar.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CifradoCesar = () => {\r\n    const [message, setMessage] = useState(''); // Estado para el mensaje ingresado\r\n    const [shift, setShift] = useState(0); // Estado para la clave de desplazamiento\r\n    const [outputMessage, setOutputMessage] = useState(''); // Estado para el mensaje cifrado o descifrado\r\n\r\n  // Función para aplicar el Cifrado César (cifrado o descifrado)\r\n    const caesarCipher = (str, shift, isEncrypting) => {\r\n        const direction = isEncrypting ? 1 : -1; // Definir dirección para cifrar o descifrar\r\n        return str\r\n        .split('')\r\n        .map((char) => {\r\n            if (/[a-zA-Z]/.test(char)) {\r\n                const base = char === char.toLowerCase() ? 97 : 65; // Código ASCII de 'a' o 'A'\r\n                return String.fromCharCode(\r\n                    ((char.charCodeAt(0) - base + direction * shift + 26) % 26) + base\r\n                );\r\n            }\r\n            return char; // Devolver otros caracteres (como espacios o símbolos) sin modificar\r\n        })\r\n        .join('');\r\n    };\r\n\r\n    // Función que se ejecuta al hacer clic en el botón de cifrar o descifrar\r\n    const handleAction = (isEncrypting) => {\r\n        const result = caesarCipher(message, parseInt(shift, 10), isEncrypting);\r\n        setOutputMessage(result);\r\n        toast.success(isEncrypting ? \"Mensaje cifrado correctamente!\" : \"Mensaje descifrado correctamente!\");\r\n        \r\n    };\r\n\r\n    // Función para copiar el mensaje\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(outputMessage);\r\n        toast.success('Mensaje copiado correctamente!')\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\", textAlign: \"center\" }}>\r\n            <h1>Cifrado César</h1>\r\n            <text>Ingresa el mensaje:</text>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Ej: Hola\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <text>Cantidad de desplazamiento</text>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Clave (desplazamiento)\"\r\n                    value={shift}\r\n                    onChange={(e) => setShift(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <button\r\n                    onClick={() => handleAction(true)} // Pasamos true para cifrar\r\n                    style={{ padding: \"10px 20px\", fontSize: \"16px\", marginRight: \"10px\" }}\r\n                >\r\n                    Cifrar Mensaje\r\n                </button>\r\n                <button\r\n                    onClick={() => handleAction(false)} // Pasamos false para descifrar\r\n                    style={{ padding: \"10px 20px\", fontSize: \"16px\" }}\r\n                >\r\n                    Descifrar Mensaje\r\n                </button>\r\n            </div>\r\n            <text>Mensaje Cifrado / Descifrado</text>\r\n            {outputMessage && (\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <textarea\r\n                        readOnly\r\n                        value={outputMessage}\r\n                        style={{\r\n                            width: \"300px\",\r\n                            height: \"100px\",\r\n                            padding: \"10px\",\r\n                            fontSize: \"16px\",\r\n                            resize: \"none\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            marginBottom: \"10px\", // Espacio entre el texto y el botón\r\n                        }}\r\n                    />\r\n                    <div>\r\n                        <Button\r\n                            onClick={handleCopy}\r\n                            variant=\"contained\"\r\n                        >\r\n                            Copiar\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { CifradoCesar };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}