{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis Ibarra\\\\Documents\\\\Tareas\\\\Seguridad informatica\\\\webCifrado\\\\cifrado\\\\src\\\\CifradoFormulario.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport toast from \"react-hot-toast\";\nimport CryptoJS from \"crypto-js\";\nimport { Rabin } from 'rabin-crypto'; // Asumimos que tienes un módulo para Rabin\nimport blake2 from 'blake2'; // Usaremos una implementación de Blake2 para hash\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CifradoFormulario = () => {\n  _s();\n  const [name, setName] = useState(''); // Estado para el nombre\n  const [address, setAddress] = useState(''); // Estado para la dirección\n  const [password, setPassword] = useState(''); // Estado para la contraseña\n  const [symmetricKey, setSymmetricKey] = useState(''); // Estado para la clave simétrica\n  const [publicKey, setPublicKey] = useState(''); // Estado para la clave pública (asimétrica)\n  const [privateKey, setPrivateKey] = useState(''); // Estado para la clave privada (asimétrica)\n  const [outputMessage, setOutputMessage] = useState(''); // Estado para mostrar el resultado\n\n  // --- Simetrico: Cifrado RC6 ---\n  const rc6Cipher = (str, key, isEncrypting) => {\n    try {\n      if (isEncrypting) {\n        return CryptoJS.RC6.encrypt(str, key).toString(); // Cifrar\n      } else {\n        return CryptoJS.RC6.decrypt(str, key).toString(CryptoJS.enc.Utf8); // Descifrar\n      }\n    } catch (error) {\n      toast.error(\"Error en el cifrado/desbloqueo simétrico\");\n      return '';\n    }\n  };\n\n  // --- Asimetrico: Cifrado Rabin ---\n  const rabinEncrypt = (message, publicKey) => {\n    try {\n      const encryptedMessage = Rabin.encrypt(message, publicKey); // Cifrar con Rabin\n      return encryptedMessage;\n    } catch (error) {\n      toast.error(\"Error en el cifrado asimétrico Rabin\");\n      return '';\n    }\n  };\n  const rabinDecrypt = (encryptedMessage, privateKey) => {\n    try {\n      const decryptedMessage = Rabin.decrypt(encryptedMessage, privateKey); // Descifrar con Rabin\n      return decryptedMessage;\n    } catch (error) {\n      toast.error(\"Error al descifrar mensaje con Rabin\");\n      return '';\n    }\n  };\n\n  // --- Hash: Blake2 ---\n  const hashBlake2 = str => {\n    const hash = blake2.createHash('blake2b');\n    hash.update(Buffer.from(str));\n    return hash.digest('hex'); // Generar el hash\n  };\n\n  // Función para manejar el proceso de cifrado o descifrado\n  const handleEncryption = () => {\n    if (!name.trim() || !address.trim() || !password.trim()) {\n      toast.error(\"Por favor ingrese todos los campos\");\n      return;\n    }\n    if (!symmetricKey.trim() || !publicKey.trim()) {\n      toast.error(\"Por favor ingrese las claves\");\n      return;\n    }\n\n    // Cifrado Simétrico (RC6)\n    const encryptedName = rc6Cipher(name, symmetricKey, true);\n    const encryptedAddress = rc6Cipher(address, symmetricKey, true);\n\n    // Cifrado Asimétrico (Rabin)\n    const encryptedPassword = rabinEncrypt(password, publicKey);\n\n    // Hash para la contraseña\n    const hashedPassword = hashBlake2(password);\n    setOutputMessage(`Nombre cifrado (RC6): ${encryptedName}\\n` + `Dirección cifrada (RC6): ${encryptedAddress}\\n` + `Contraseña cifrada (Rabin): ${encryptedPassword}\\n` + `Contraseña hashed (Blake2): ${hashedPassword}`);\n  };\n  const handleDecryption = () => {\n    if (!symmetricKey.trim() || !privateKey.trim()) {\n      toast.error(\"Por favor ingrese las claves\");\n      return;\n    }\n    try {\n      // Descifrado Simétrico (RC6)\n      const decryptedName = rc6Cipher(outputMessage.name, symmetricKey, false);\n      const decryptedAddress = rc6Cipher(outputMessage.address, symmetricKey, false);\n\n      // Descifrado Asimétrico (Rabin)\n      const decryptedPassword = rabinDecrypt(outputMessage.password, privateKey);\n      setOutputMessage(`Nombre descifrado: ${decryptedName}\\n` + `Dirección descifrada: ${decryptedAddress}\\n` + `Contraseña descifrada: ${decryptedPassword}`);\n    } catch (error) {\n      toast.error(\"Error al descifrar los datos\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Formulario de Cifrado y Hash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Nombre:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ej: John Doe\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Direcci\\xF3n:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ej: Calle 123\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Contrase\\xF1a:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Clave Sim\\xE9trica (RC6):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave RC6\",\n        value: symmetricKey,\n        onChange: e => setSymmetricKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Clave P\\xFAblica (Rabin):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave P\\xFAblica Rabin\",\n        value: publicKey,\n        onChange: e => setPublicKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Clave Privada (Rabin):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave Privada Rabin\",\n        value: privateKey,\n        onChange: e => setPrivateKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEncryption,\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Cifrar Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDecryption,\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Descifrar Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Resultado:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), outputMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: outputMessage,\n        style: {\n          width: \"300px\",\n          height: \"200px\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          resize: \"none\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(CifradoFormulario, \"CmOJAC4/gAd5ntpZH2dRw/0Nydw=\");\n_c = CifradoFormulario;\nexport { CifradoFormulario };\nvar _c;\n$RefreshReg$(_c, \"CifradoFormulario\");","map":{"version":3,"names":["useState","Button","toast","CryptoJS","Rabin","blake2","jsxDEV","_jsxDEV","CifradoFormulario","_s","name","setName","address","setAddress","password","setPassword","symmetricKey","setSymmetricKey","publicKey","setPublicKey","privateKey","setPrivateKey","outputMessage","setOutputMessage","rc6Cipher","str","key","isEncrypting","RC6","encrypt","toString","decrypt","enc","Utf8","error","rabinEncrypt","message","encryptedMessage","rabinDecrypt","decryptedMessage","hashBlake2","hash","createHash","update","Buffer","from","digest","handleEncryption","trim","encryptedName","encryptedAddress","encryptedPassword","hashedPassword","handleDecryption","decryptedName","decryptedAddress","decryptedPassword","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","width","fontSize","onClick","variant","color","marginRight","marginTop","readOnly","height","resize","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Luis Ibarra/Documents/Tareas/Seguridad informatica/webCifrado/cifrado/src/CifradoFormulario.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport toast from \"react-hot-toast\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport { Rabin } from 'rabin-crypto'; // Asumimos que tienes un módulo para Rabin\r\nimport blake2 from 'blake2'; // Usaremos una implementación de Blake2 para hash\r\n\r\nconst CifradoFormulario = () => {\r\n    const [name, setName] = useState(''); // Estado para el nombre\r\n    const [address, setAddress] = useState(''); // Estado para la dirección\r\n    const [password, setPassword] = useState(''); // Estado para la contraseña\r\n    const [symmetricKey, setSymmetricKey] = useState(''); // Estado para la clave simétrica\r\n    const [publicKey, setPublicKey] = useState(''); // Estado para la clave pública (asimétrica)\r\n    const [privateKey, setPrivateKey] = useState(''); // Estado para la clave privada (asimétrica)\r\n    const [outputMessage, setOutputMessage] = useState(''); // Estado para mostrar el resultado\r\n    \r\n    // --- Simetrico: Cifrado RC6 ---\r\n    const rc6Cipher = (str, key, isEncrypting) => {\r\n        try {\r\n            if (isEncrypting) {\r\n                return CryptoJS.RC6.encrypt(str, key).toString(); // Cifrar\r\n            } else {\r\n                return CryptoJS.RC6.decrypt(str, key).toString(CryptoJS.enc.Utf8); // Descifrar\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Error en el cifrado/desbloqueo simétrico\");\r\n            return '';\r\n        }\r\n    };\r\n\r\n    // --- Asimetrico: Cifrado Rabin ---\r\n    const rabinEncrypt = (message, publicKey) => {\r\n        try {\r\n            const encryptedMessage = Rabin.encrypt(message, publicKey); // Cifrar con Rabin\r\n            return encryptedMessage;\r\n        } catch (error) {\r\n            toast.error(\"Error en el cifrado asimétrico Rabin\");\r\n            return '';\r\n        }\r\n    };\r\n\r\n    const rabinDecrypt = (encryptedMessage, privateKey) => {\r\n        try {\r\n            const decryptedMessage = Rabin.decrypt(encryptedMessage, privateKey); // Descifrar con Rabin\r\n            return decryptedMessage;\r\n        } catch (error) {\r\n            toast.error(\"Error al descifrar mensaje con Rabin\");\r\n            return '';\r\n        }\r\n    };\r\n\r\n    // --- Hash: Blake2 ---\r\n    const hashBlake2 = (str) => {\r\n        const hash = blake2.createHash('blake2b');\r\n        hash.update(Buffer.from(str));\r\n        return hash.digest('hex'); // Generar el hash\r\n    };\r\n\r\n    // Función para manejar el proceso de cifrado o descifrado\r\n    const handleEncryption = () => {\r\n        if (!name.trim() || !address.trim() || !password.trim()) {\r\n            toast.error(\"Por favor ingrese todos los campos\");\r\n            return;\r\n        }\r\n        if (!symmetricKey.trim() || !publicKey.trim()) {\r\n            toast.error(\"Por favor ingrese las claves\");\r\n            return;\r\n        }\r\n\r\n        // Cifrado Simétrico (RC6)\r\n        const encryptedName = rc6Cipher(name, symmetricKey, true);\r\n        const encryptedAddress = rc6Cipher(address, symmetricKey, true);\r\n        \r\n        // Cifrado Asimétrico (Rabin)\r\n        const encryptedPassword = rabinEncrypt(password, publicKey);\r\n\r\n        // Hash para la contraseña\r\n        const hashedPassword = hashBlake2(password);\r\n\r\n        setOutputMessage(\r\n            `Nombre cifrado (RC6): ${encryptedName}\\n` +\r\n            `Dirección cifrada (RC6): ${encryptedAddress}\\n` +\r\n            `Contraseña cifrada (Rabin): ${encryptedPassword}\\n` +\r\n            `Contraseña hashed (Blake2): ${hashedPassword}`\r\n        );\r\n    };\r\n\r\n    const handleDecryption = () => {\r\n        if (!symmetricKey.trim() || !privateKey.trim()) {\r\n            toast.error(\"Por favor ingrese las claves\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Descifrado Simétrico (RC6)\r\n            const decryptedName = rc6Cipher(outputMessage.name, symmetricKey, false);\r\n            const decryptedAddress = rc6Cipher(outputMessage.address, symmetricKey, false);\r\n\r\n            // Descifrado Asimétrico (Rabin)\r\n            const decryptedPassword = rabinDecrypt(outputMessage.password, privateKey);\r\n\r\n            setOutputMessage(\r\n                `Nombre descifrado: ${decryptedName}\\n` +\r\n                `Dirección descifrada: ${decryptedAddress}\\n` +\r\n                `Contraseña descifrada: ${decryptedPassword}`\r\n            );\r\n        } catch (error) {\r\n            toast.error(\"Error al descifrar los datos\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\", textAlign: \"center\" }}>\r\n            <h1>Formulario de Cifrado y Hash</h1>\r\n            <text>Nombre:</text>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Ej: John Doe\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <text>Dirección:</text>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Ej: Calle 123\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <text>Contraseña:</text>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Contraseña\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <text>Clave Simétrica (RC6):</text>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave RC6\"\r\n                    value={symmetricKey}\r\n                    onChange={(e) => setSymmetricKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <text>Clave Pública (Rabin):</text>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave Pública Rabin\"\r\n                    value={publicKey}\r\n                    onChange={(e) => setPublicKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <text>Clave Privada (Rabin):</text>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave Privada Rabin\"\r\n                    value={privateKey}\r\n                    onChange={(e) => setPrivateKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <Button\r\n                    onClick={handleEncryption}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginRight: \"10px\" }}\r\n                >\r\n                    Cifrar Datos\r\n                </Button>\r\n                <Button\r\n                    onClick={handleDecryption}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                >\r\n                    Descifrar Datos\r\n                </Button>\r\n            </div>\r\n            <text>Resultado:</text>\r\n            {outputMessage && (\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <textarea\r\n                        readOnly\r\n                        value={outputMessage}\r\n                        style={{\r\n                        width: \"300px\",\r\n                        height: \"200px\",\r\n                        padding: \"10px\",\r\n                        fontSize: \"16px\",\r\n                        resize: \"none\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px\",\r\n                        marginBottom: \"10px\", \r\n                        }}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { CifradoFormulario };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}