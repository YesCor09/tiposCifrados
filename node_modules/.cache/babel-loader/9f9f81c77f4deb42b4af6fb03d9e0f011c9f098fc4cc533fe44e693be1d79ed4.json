{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis Ibarra\\\\Documents\\\\Tareas\\\\Seguridad informatica\\\\webCifrado\\\\cifrado\\\\src\\\\CifradoFormulario.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport toast from \"react-hot-toast\";\nimport blake from 'blakejs';\n\n// Función para convertir una cadena a hexadecimal sin usar Buffer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stringToHex = str => {\n  return str.split('').map(c => c.charCodeAt(0).toString(16)).join('');\n};\n\n// Función para convertir un array de bytes a hexadecimal\nconst toHex = byteArray => {\n  return Array.from(byteArray, byte => {\n    return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n  }).join('');\n};\n\n// Implementación básica de RC6 en JavaScript\nconst w = 32; // Tamaño de palabra (32 bits)\nconst r = 20; // Número de rondas recomendado\nconst lgw = Math.log2(w); // Log base 2 del tamaño de palabra\nconst mod = 2 ** w; // Módulo para operaciones de 32 bits\n\n// Generación de claves\nconst generateKeySchedule = K => {\n  const P32 = 0xB7E15163;\n  const Q32 = 0x9E3779B9;\n  const t = 2 * (r + 2);\n  const S = new Array(t);\n  S[0] = P32;\n  for (let i = 1; i < t; i++) {\n    S[i] = (S[i - 1] + Q32) % mod;\n  }\n  const L = [];\n  for (let i = 0; i < K.length / 4; i++) {\n    L[i] = K.readUInt32LE(i * 4);\n  }\n  let A = 0,\n    B = 0;\n  let i = 0,\n    j = 0;\n  const v = 3 * Math.max(L.length, t);\n  for (let s = 0; s < v; s++) {\n    A = S[i] = rol((S[i] + A + B) % mod, 3);\n    B = L[j] = rol((L[j] + A + B) % mod, (A + B) % w);\n    i = (i + 1) % t;\n    j = (j + 1) % L.length;\n  }\n  return S;\n};\n\n// Rotación a la izquierda\nconst rol = (x, n) => {\n  return (x << n | x >>> w - n) % mod;\n};\n\n// Rotación a la derecha\nconst ror = (x, n) => {\n  return (x >>> n | x << w - n) % mod;\n};\n\n// Cifrado RC6\nconst rc6Encrypt = (plaintext, S) => {\n  let A = plaintext.readUInt32LE(0);\n  let B = plaintext.readUInt32LE(4);\n  let C = plaintext.readUInt32LE(8);\n  let D = plaintext.readUInt32LE(12);\n  B = (B + S[0]) % mod;\n  D = (D + S[1]) % mod;\n  for (let i = 1; i <= r; i++) {\n    const t = rol(B * (2 * B + 1) % mod, lgw);\n    const u = rol(D * (2 * D + 1) % mod, lgw);\n    A = (rol(A ^ t, u) + S[2 * i]) % mod;\n    C = (rol(C ^ u, t) + S[2 * i + 1]) % mod;\n    [A, B, C, D] = [B, C, D, A];\n  }\n  A = (A + S[2 * r + 2]) % mod;\n  C = (C + S[2 * r + 3]) % mod;\n  const ciphertext = Buffer.alloc(16);\n  ciphertext.writeUInt32LE(A, 0);\n  ciphertext.writeUInt32LE(B, 4);\n  ciphertext.writeUInt32LE(C, 8);\n  ciphertext.writeUInt32LE(D, 12);\n  return ciphertext;\n};\n\n// Descifrado RC6\nconst rc6Decrypt = (ciphertext, S) => {\n  let A = ciphertext.readUInt32LE(0);\n  let B = ciphertext.readUInt32LE(4);\n  let C = ciphertext.readUInt32LE(8);\n  let D = ciphertext.readUInt32LE(12);\n  C = (C - S[2 * r + 3]) % mod;\n  A = (A - S[2 * r + 2]) % mod;\n  for (let i = r; i >= 1; i--) {\n    [A, B, C, D] = [D, A, B, C];\n    const t = rol(B * (2 * B + 1) % mod, lgw);\n    const u = rol(D * (2 * D + 1) % mod, lgw);\n    C = ror((C - S[2 * i + 1]) % mod, t) ^ u;\n    A = ror((A - S[2 * i]) % mod, u) ^ t;\n  }\n  D = (D - S[1]) % mod;\n  B = (B - S[0]) % mod;\n  const plaintext = Buffer.alloc(16);\n  plaintext.writeUInt32LE(A, 0);\n  plaintext.writeUInt32LE(B, 4);\n  plaintext.writeUInt32LE(C, 8);\n  plaintext.writeUInt32LE(D, 12);\n  return plaintext;\n};\n\n// Función de Hash usando Blake2\nconst hashBlake2 = str => {\n  const inputBytes = new TextEncoder().encode(str); // Convertir la cadena en bytes\n  const hash = blake.blake2b(inputBytes); // Generar el hash usando blakejs\n  return toHex(hash); // Convertir el resultado en formato hexadecimal\n};\nconst CifradoFormulario = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [symmetricKey, setSymmetricKey] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [outputMessage, setOutputMessage] = useState('');\n  const handleEncryption = () => {\n    if (!name.trim() || !address.trim() || !password.trim()) {\n      toast.error(\"Por favor ingrese todos los campos\");\n      return;\n    }\n    if (!symmetricKey.trim() || !publicKey.trim()) {\n      toast.error(\"Por favor ingrese las claves\");\n      return;\n    }\n\n    // Simular la clave como un Buffer\n    const keyBuffer = Buffer.from(symmetricKey, 'utf8');\n    const S = generateKeySchedule(keyBuffer);\n\n    // Convertir el nombre y la dirección a buffers\n    const nameBuffer = Buffer.alloc(16);\n    nameBuffer.write(name, 'utf8');\n    const addressBuffer = Buffer.alloc(16);\n    addressBuffer.write(address, 'utf8');\n\n    // Cifrar\n    const encryptedName = rc6Encrypt(nameBuffer, S).toString('hex');\n    const encryptedAddress = rc6Encrypt(addressBuffer, S).toString('hex');\n    const encryptedPassword = stringToHex(password); // Simular cifrado con Rabin\n    const hashedPassword = hashBlake2(password);\n    setOutputMessage(`Nombre cifrado (RC6): ${encryptedName}\\n` + `Dirección cifrada (RC6): ${encryptedAddress}\\n` + `Contraseña cifrada (Rabin): ${encryptedPassword}\\n` + `Contraseña hashed (Blake2): ${hashedPassword}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Formulario de Cifrado y Hash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Direcci\\xF3n\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave Sim\\xE9trica (RC6)\",\n        value: symmetricKey,\n        onChange: e => setSymmetricKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave P\\xFAblica (Rabin)\",\n        value: publicKey,\n        onChange: e => setPublicKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEncryption,\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Cifrar Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: outputMessage && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: outputMessage,\n        style: {\n          width: \"300px\",\n          height: \"200px\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          resize: \"none\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n_s(CifradoFormulario, \"CmOJAC4/gAd5ntpZH2dRw/0Nydw=\");\n_c = CifradoFormulario;\nexport { CifradoFormulario };\nvar _c;\n$RefreshReg$(_c, \"CifradoFormulario\");","map":{"version":3,"names":["useState","Button","toast","blake","jsxDEV","_jsxDEV","stringToHex","str","split","map","c","charCodeAt","toString","join","toHex","byteArray","Array","from","byte","slice","w","r","lgw","Math","log2","mod","generateKeySchedule","K","P32","Q32","t","S","i","L","length","readUInt32LE","A","B","j","v","max","s","rol","x","n","ror","rc6Encrypt","plaintext","C","D","u","ciphertext","Buffer","alloc","writeUInt32LE","rc6Decrypt","hashBlake2","inputBytes","TextEncoder","encode","hash","blake2b","CifradoFormulario","_s","name","setName","address","setAddress","password","setPassword","symmetricKey","setSymmetricKey","publicKey","setPublicKey","privateKey","setPrivateKey","outputMessage","setOutputMessage","handleEncryption","trim","error","keyBuffer","nameBuffer","write","addressBuffer","encryptedName","encryptedAddress","encryptedPassword","hashedPassword","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","width","fontSize","onClick","variant","color","marginRight","readOnly","height","resize","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Luis Ibarra/Documents/Tareas/Seguridad informatica/webCifrado/cifrado/src/CifradoFormulario.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport toast from \"react-hot-toast\";\r\nimport blake from 'blakejs';\r\n\r\n// Función para convertir una cadena a hexadecimal sin usar Buffer\r\nconst stringToHex = (str) => {\r\n    return str.split('').map(c => c.charCodeAt(0).toString(16)).join('');\r\n};\r\n\r\n// Función para convertir un array de bytes a hexadecimal\r\nconst toHex = (byteArray) => {\r\n    return Array.from(byteArray, (byte) => {\r\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n    }).join('');\r\n};\r\n\r\n// Implementación básica de RC6 en JavaScript\r\nconst w = 32; // Tamaño de palabra (32 bits)\r\nconst r = 20; // Número de rondas recomendado\r\nconst lgw = Math.log2(w); // Log base 2 del tamaño de palabra\r\nconst mod = 2 ** w; // Módulo para operaciones de 32 bits\r\n\r\n// Generación de claves\r\nconst generateKeySchedule = (K) => {\r\n    const P32 = 0xB7E15163;\r\n    const Q32 = 0x9E3779B9;\r\n    const t = 2 * (r + 2);\r\n    const S = new Array(t);\r\n    S[0] = P32;\r\n    for (let i = 1; i < t; i++) {\r\n        S[i] = (S[i - 1] + Q32) % mod;\r\n    }\r\n\r\n    const L = [];\r\n    for (let i = 0; i < K.length / 4; i++) {\r\n        L[i] = K.readUInt32LE(i * 4);\r\n    }\r\n\r\n    let A = 0, B = 0;\r\n    let i = 0, j = 0;\r\n    const v = 3 * Math.max(L.length, t);\r\n    for (let s = 0; s < v; s++) {\r\n        A = S[i] = rol((S[i] + A + B) % mod, 3);\r\n        B = L[j] = rol((L[j] + A + B) % mod, (A + B) % w);\r\n        i = (i + 1) % t;\r\n        j = (j + 1) % L.length;\r\n    }\r\n\r\n    return S;\r\n};\r\n\r\n// Rotación a la izquierda\r\nconst rol = (x, n) => {\r\n    return ((x << n) | (x >>> (w - n))) % mod;\r\n};\r\n\r\n// Rotación a la derecha\r\nconst ror = (x, n) => {\r\n    return ((x >>> n) | (x << (w - n))) % mod;\r\n};\r\n\r\n// Cifrado RC6\r\nconst rc6Encrypt = (plaintext, S) => {\r\n    let A = plaintext.readUInt32LE(0);\r\n    let B = plaintext.readUInt32LE(4);\r\n    let C = plaintext.readUInt32LE(8);\r\n    let D = plaintext.readUInt32LE(12);\r\n\r\n    B = (B + S[0]) % mod;\r\n    D = (D + S[1]) % mod;\r\n\r\n    for (let i = 1; i <= r; i++) {\r\n        const t = rol((B * (2 * B + 1)) % mod, lgw);\r\n        const u = rol((D * (2 * D + 1)) % mod, lgw);\r\n        A = (rol(A ^ t, u) + S[2 * i]) % mod;\r\n        C = (rol(C ^ u, t) + S[2 * i + 1]) % mod;\r\n\r\n        [A, B, C, D] = [B, C, D, A];\r\n    }\r\n\r\n    A = (A + S[2 * r + 2]) % mod;\r\n    C = (C + S[2 * r + 3]) % mod;\r\n\r\n    const ciphertext = Buffer.alloc(16);\r\n    ciphertext.writeUInt32LE(A, 0);\r\n    ciphertext.writeUInt32LE(B, 4);\r\n    ciphertext.writeUInt32LE(C, 8);\r\n    ciphertext.writeUInt32LE(D, 12);\r\n    return ciphertext;\r\n};\r\n\r\n// Descifrado RC6\r\nconst rc6Decrypt = (ciphertext, S) => {\r\n    let A = ciphertext.readUInt32LE(0);\r\n    let B = ciphertext.readUInt32LE(4);\r\n    let C = ciphertext.readUInt32LE(8);\r\n    let D = ciphertext.readUInt32LE(12);\r\n\r\n    C = (C - S[2 * r + 3]) % mod;\r\n    A = (A - S[2 * r + 2]) % mod;\r\n\r\n    for (let i = r; i >= 1; i--) {\r\n        [A, B, C, D] = [D, A, B, C];\r\n\r\n        const t = rol((B * (2 * B + 1)) % mod, lgw);\r\n        const u = rol((D * (2 * D + 1)) % mod, lgw);\r\n        C = ror((C - S[2 * i + 1]) % mod, t) ^ u;\r\n        A = ror((A - S[2 * i]) % mod, u) ^ t;\r\n    }\r\n\r\n    D = (D - S[1]) % mod;\r\n    B = (B - S[0]) % mod;\r\n\r\n    const plaintext = Buffer.alloc(16);\r\n    plaintext.writeUInt32LE(A, 0);\r\n    plaintext.writeUInt32LE(B, 4);\r\n    plaintext.writeUInt32LE(C, 8);\r\n    plaintext.writeUInt32LE(D, 12);\r\n    return plaintext;\r\n};\r\n\r\n// Función de Hash usando Blake2\r\nconst hashBlake2 = (str) => {\r\n    const inputBytes = new TextEncoder().encode(str); // Convertir la cadena en bytes\r\n    const hash = blake.blake2b(inputBytes); // Generar el hash usando blakejs\r\n    return toHex(hash); // Convertir el resultado en formato hexadecimal\r\n};\r\n\r\nconst CifradoFormulario = () => {\r\n    const [name, setName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [symmetricKey, setSymmetricKey] = useState('');\r\n    const [publicKey, setPublicKey] = useState('');\r\n    const [privateKey, setPrivateKey] = useState('');\r\n    const [outputMessage, setOutputMessage] = useState('');\r\n\r\n    const handleEncryption = () => {\r\n        if (!name.trim() || !address.trim() || !password.trim()) {\r\n            toast.error(\"Por favor ingrese todos los campos\");\r\n            return;\r\n        }\r\n        if (!symmetricKey.trim() || !publicKey.trim()) {\r\n            toast.error(\"Por favor ingrese las claves\");\r\n            return;\r\n        }\r\n\r\n        // Simular la clave como un Buffer\r\n        const keyBuffer = Buffer.from(symmetricKey, 'utf8');\r\n        const S = generateKeySchedule(keyBuffer);\r\n\r\n        // Convertir el nombre y la dirección a buffers\r\n        const nameBuffer = Buffer.alloc(16);\r\n        nameBuffer.write(name, 'utf8');\r\n        const addressBuffer = Buffer.alloc(16);\r\n        addressBuffer.write(address, 'utf8');\r\n\r\n        // Cifrar\r\n        const encryptedName = rc6Encrypt(nameBuffer, S).toString('hex');\r\n        const encryptedAddress = rc6Encrypt(addressBuffer, S).toString('hex');\r\n        const encryptedPassword = stringToHex(password); // Simular cifrado con Rabin\r\n        const hashedPassword = hashBlake2(password);\r\n\r\n        setOutputMessage(\r\n            `Nombre cifrado (RC6): ${encryptedName}\\n` +\r\n            `Dirección cifrada (RC6): ${encryptedAddress}\\n` +\r\n            `Contraseña cifrada (Rabin): ${encryptedPassword}\\n` +\r\n            `Contraseña hashed (Blake2): ${hashedPassword}`\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\", textAlign: \"center\" }}>\r\n            <h1>Formulario de Cifrado y Hash</h1>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Dirección\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Contraseña\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave Simétrica (RC6)\"\r\n                    value={symmetricKey}\r\n                    onChange={(e) => setSymmetricKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave Pública (Rabin)\"\r\n                    value={publicKey}\r\n                    onChange={(e) => setPublicKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <Button\r\n                    onClick={handleEncryption}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginRight: \"10px\" }}\r\n                >\r\n                    Cifrar Datos\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                {outputMessage && (\r\n                    <textarea\r\n                        readOnly\r\n                        value={outputMessage}\r\n                        style={{\r\n                            width: \"300px\",\r\n                            height: \"200px\",\r\n                            padding: \"10px\",\r\n                            fontSize: \"16px\",\r\n                            resize: \"none\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            marginBottom: \"10px\",\r\n                        }}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { CifradoFormulario };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}