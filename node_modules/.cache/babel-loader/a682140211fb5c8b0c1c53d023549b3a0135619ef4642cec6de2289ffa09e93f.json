{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis Ibarra\\\\Documents\\\\Tareas\\\\Seguridad informatica\\\\webCifrado\\\\cifrado\\\\src\\\\CifradoFormulario.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport toast from \"react-hot-toast\";\nimport blake from 'blakejs';\n\n// Función para convertir una cadena a hexadecimal sin usar Buffer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stringToHex = str => {\n  return str.split('').map(c => c.charCodeAt(0).toString(16)).join('');\n};\n\n// Función para convertir un array de bytes a hexadecimal\nconst toHex = byteArray => {\n  return Array.from(byteArray, byte => {\n    return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n  }).join('');\n};\n\n// Implementación de Rabin\nconst generateRabinKeys = () => {\n  const p = 61;\n  const q = 53;\n  const n = p * q;\n  return {\n    p,\n    q,\n    n\n  };\n};\nconst rabinEncrypt = (message, n) => {\n  const hexMessage = stringToHex(message);\n  const m = parseInt(hexMessage, 16); // Convertir el mensaje a entero usando hexadecimal\n  const c = m ** 2 % parseInt(n); // Cifrar\n  return c.toString();\n};\nconst rabinDecrypt = (cipher, p, q) => {\n  const n = parseInt(p * q);\n  const c = parseInt(cipher);\n  const mp = modSqrt(c, p);\n  const mq = modSqrt(c, q);\n  const [r1, r2] = chineseRemainderTheorem(mp, mq, p, q, n);\n  return [r1, r2];\n};\nconst modSqrt = (a, p) => {\n  return Math.pow(a, (p + 1) / 4) % p;\n};\nconst chineseRemainderTheorem = (mp, mq, p, q, n) => {\n  const yp = q * modInverse(q, p);\n  const yq = p * modInverse(p, q);\n  const r1 = (mp * yp + mq * yq) % n;\n  const r2 = (mp * yp - mq * yq) % n;\n  return [r1, r2];\n};\nconst modInverse = (a, m) => {\n  const [g, x] = extendedGcd(a, m);\n  if (g !== 1) throw new Error('No existe inverso modular');\n  return x % m;\n};\nconst extendedGcd = (a, b) => {\n  if (b === 0) return [a, 1, 0];\n  const [g, x1, y1] = extendedGcd(b, a % b);\n  return [g, y1, x1 - Math.floor(a / b) * y1];\n};\n\n// Implementación de RC6 en JavaScript usando DataView en lugar de Buffer\nconst w = 32; // Tamaño de palabra (32 bits)\nconst r = 20; // Número de rondas recomendado\nconst lgw = Math.log2(w); // Log base 2 del tamaño de palabra\n\nconst mod = 2 ** w; // Módulo para operaciones de 32 bits\n\n// Generación de claves para RC6\nconst generateKeySchedule = K => {\n  const P32 = 0xB7E15163;\n  const Q32 = 0x9E3779B9;\n  const t = 2 * (r + 2);\n  const S = new Array(t);\n  S[0] = P32;\n  for (let i = 1; i < t; i++) {\n    S[i] = (S[i - 1] + Q32) % mod;\n  }\n\n  // Usamos DataView para leer enteros de 32 bits\n  const L = [];\n  const KView = new DataView(K.buffer);\n  for (let i = 0; i < K.length / 4; i++) {\n    L[i] = KView.getUint32(i * 4, true); // true para little-endian\n  }\n  let A = 0,\n    B = 0;\n  let i = 0,\n    j = 0;\n  const v = 3 * Math.max(L.length, t);\n  for (let s = 0; s < v; s++) {\n    A = S[i] = rol((S[i] + A + B) % mod, 3);\n    B = L[j] = rol((L[j] + A + B) % mod, (A + B) % w);\n    i = (i + 1) % t;\n    j = (j + 1) % L.length;\n  }\n  return S;\n};\n\n// Rotación a la izquierda\nconst rol = (x, n) => {\n  return (x << n | x >>> w - n) % mod;\n};\n\n// Rotación a la derecha\nconst ror = (x, n) => {\n  return (x >>> n | x << w - n) % mod;\n};\n\n// Cifrado RC6\nconst rc6Encrypt = (plaintext, S) => {\n  const encoder = new TextEncoder();\n  const plaintextBytes = encoder.encode(plaintext); // Convertir a bytes usando TextEncoder\n  let A = new DataView(plaintextBytes.buffer).getUint32(0);\n  let B = new DataView(plaintextBytes.buffer).getUint32(4);\n  let C = new DataView(plaintextBytes.buffer).getUint32(8);\n  let D = new DataView(plaintextBytes.buffer).getUint32(12);\n  B = (B + S[0]) % mod;\n  D = (D + S[1]) % mod;\n  for (let i = 1; i <= r; i++) {\n    const t = rol(B * (2 * B + 1) % mod, lgw);\n    const u = rol(D * (2 * D + 1) % mod, lgw);\n    A = (rol(A ^ t, u) + S[2 * i]) % mod;\n    C = (rol(C ^ u, t) + S[2 * i + 1]) % mod;\n    [A, B, C, D] = [B, C, D, A];\n  }\n  A = (A + S[2 * r + 2]) % mod;\n  C = (C + S[2 * r + 3]) % mod;\n  const encrypted = new Uint32Array([A, B, C, D]);\n  return toHex(new Uint8Array(encrypted.buffer)); // Convertir a hexadecimal\n};\n\n// Descifrado RC6\nconst rc6Decrypt = (ciphertext, S) => {\n  const decoder = new TextDecoder();\n  const ciphertextBytes = Uint8Array.from(Buffer.from(ciphertext, 'hex')); // Convertir hex a bytes\n\n  let A = new DataView(ciphertextBytes.buffer).getUint32(0);\n  let B = new DataView(ciphertextBytes.buffer).getUint32(4);\n  let C = new DataView(ciphertextBytes.buffer).getUint32(8);\n  let D = new DataView(ciphertextBytes.buffer).getUint32(12);\n  C = (C - S[2 * r + 3]) % mod;\n  A = (A - S[2 * r + 2]) % mod;\n  for (let i = r; i >= 1; i--) {\n    [A, B, C, D] = [D, A, B, C];\n    const t = rol(B * (2 * B + 1) % mod, lgw);\n    const u = rol(D * (2 * D + 1) % mod, lgw);\n    C = ror((C - S[2 * i + 1]) % mod, t) ^ u;\n    A = ror((A - S[2 * i]) % mod, u) ^ t;\n  }\n  D = (D - S[1]) % mod;\n  B = (B - S[0]) % mod;\n  const decrypted = new Uint32Array([A, B, C, D]);\n  return decoder.decode(new Uint8Array(decrypted.buffer)); // Convertir bytes a texto\n};\n\n// Función de Hash usando Blake2\nconst hashBlake2 = str => {\n  const inputBytes = new TextEncoder().encode(str); // Convertir la cadena en bytes\n  const hash = blake.blake2b(inputBytes); // Generar el hash usando blakejs\n  return toHex(hash); // Convertir el resultado en formato hexadecimal\n};\nconst CifradoFormulario = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [symmetricKey, setSymmetricKey] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [outputMessage, setOutputMessage] = useState('');\n  const handleEncryption = () => {\n    if (!name.trim() || !address.trim() || !password.trim()) {\n      toast.error(\"Por favor ingrese todos los campos\");\n      return;\n    }\n    if (!symmetricKey.trim() || !publicKey.trim()) {\n      toast.error(\"Por favor ingrese las claves\");\n      return;\n    }\n    const keyBytes = new TextEncoder().encode(symmetricKey); // Convertir la clave a bytes\n    const S = generateKeySchedule(keyBytes);\n\n    // Cifrar usando RC6\n    const encryptedName = rc6Encrypt(name, S);\n    const encryptedAddress = rc6Encrypt(address, S);\n    const encryptedPassword = rabinEncrypt(password, publicKey);\n    const hashedPassword = hashBlake2(password);\n    setOutputMessage(`Nombre cifrado (RC6): ${encryptedName}\\n` + `Dirección cifrada (RC6): ${encryptedAddress}\\n` + `Contraseña cifrada (Rabin): ${encryptedPassword}\\n` + `Contraseña hashed (Blake2): ${hashedPassword}`);\n  };\n  const handleDecryption = () => {\n    if (!symmetricKey.trim() || !privateKey.trim()) {\n      toast.error(\"Por favor ingrese las claves\");\n      return;\n    }\n    try {\n      const keyBytes = new TextEncoder().encode(symmetricKey); // Convertir la clave a bytes\n      const S = generateKeySchedule(keyBytes);\n      const decryptedName = rc6Decrypt(outputMessage.name, S);\n      const decryptedAddress = rc6Decrypt(outputMessage.address, S);\n      const decryptedPassword = rabinDecrypt(outputMessage.password, privateKey);\n      setOutputMessage(`Nombre descifrado: ${decryptedName}\\n` + `Dirección descifrada: ${decryptedAddress}\\n` + `Contraseña descifrada: ${decryptedPassword}`);\n    } catch (error) {\n      toast.error(\"Error al descifrar los datos\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Formulario de Cifrado y Hash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Direcci\\xF3n\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave Sim\\xE9trica (RC6)\",\n        value: symmetricKey,\n        onChange: e => setSymmetricKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave P\\xFAblica (Rabin)\",\n        value: publicKey,\n        onChange: e => setPublicKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave Privada (Rabin)\",\n        value: privateKey,\n        onChange: e => setPrivateKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEncryption,\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Cifrar Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDecryption,\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Descifrar Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: outputMessage && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: outputMessage,\n        style: {\n          width: \"300px\",\n          height: \"200px\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          resize: \"none\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n};\n_s(CifradoFormulario, \"CmOJAC4/gAd5ntpZH2dRw/0Nydw=\");\n_c = CifradoFormulario;\nexport { CifradoFormulario };\nvar _c;\n$RefreshReg$(_c, \"CifradoFormulario\");","map":{"version":3,"names":["useState","Button","toast","blake","jsxDEV","_jsxDEV","stringToHex","str","split","map","c","charCodeAt","toString","join","toHex","byteArray","Array","from","byte","slice","generateRabinKeys","p","q","n","rabinEncrypt","message","hexMessage","m","parseInt","rabinDecrypt","cipher","mp","modSqrt","mq","r1","r2","chineseRemainderTheorem","a","Math","pow","yp","modInverse","yq","g","x","extendedGcd","Error","b","x1","y1","floor","w","r","lgw","log2","mod","generateKeySchedule","K","P32","Q32","t","S","i","L","KView","DataView","buffer","length","getUint32","A","B","j","v","max","s","rol","ror","rc6Encrypt","plaintext","encoder","TextEncoder","plaintextBytes","encode","C","D","u","encrypted","Uint32Array","Uint8Array","rc6Decrypt","ciphertext","decoder","TextDecoder","ciphertextBytes","Buffer","decrypted","decode","hashBlake2","inputBytes","hash","blake2b","CifradoFormulario","_s","name","setName","address","setAddress","password","setPassword","symmetricKey","setSymmetricKey","publicKey","setPublicKey","privateKey","setPrivateKey","outputMessage","setOutputMessage","handleEncryption","trim","error","keyBytes","encryptedName","encryptedAddress","encryptedPassword","hashedPassword","handleDecryption","decryptedName","decryptedAddress","decryptedPassword","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","width","fontSize","onClick","variant","color","marginRight","readOnly","height","resize","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Luis Ibarra/Documents/Tareas/Seguridad informatica/webCifrado/cifrado/src/CifradoFormulario.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport toast from \"react-hot-toast\";\r\nimport blake from 'blakejs';\r\n\r\n// Función para convertir una cadena a hexadecimal sin usar Buffer\r\nconst stringToHex = (str) => {\r\n    return str.split('').map(c => c.charCodeAt(0).toString(16)).join('');\r\n};\r\n\r\n// Función para convertir un array de bytes a hexadecimal\r\nconst toHex = (byteArray) => {\r\n    return Array.from(byteArray, (byte) => {\r\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n    }).join('');\r\n};\r\n\r\n// Implementación de Rabin\r\nconst generateRabinKeys = () => {\r\n    const p = 61;\r\n    const q = 53;\r\n    const n = p * q;\r\n    return { p, q, n };\r\n};\r\n\r\nconst rabinEncrypt = (message, n) => {\r\n    const hexMessage = stringToHex(message);\r\n    const m = parseInt(hexMessage, 16); // Convertir el mensaje a entero usando hexadecimal\r\n    const c = (m ** 2) % parseInt(n); // Cifrar\r\n    return c.toString();\r\n};\r\n\r\nconst rabinDecrypt = (cipher, p, q) => {\r\n    const n = parseInt(p * q);\r\n    const c = parseInt(cipher);\r\n    const mp = modSqrt(c, p);\r\n    const mq = modSqrt(c, q);\r\n    const [r1, r2] = chineseRemainderTheorem(mp, mq, p, q, n);\r\n    return [r1, r2];\r\n};\r\n\r\nconst modSqrt = (a, p) => {\r\n    return Math.pow(a, (p + 1) / 4) % p;\r\n};\r\n\r\nconst chineseRemainderTheorem = (mp, mq, p, q, n) => {\r\n    const yp = q * modInverse(q, p);\r\n    const yq = p * modInverse(p, q);\r\n    const r1 = (mp * yp + mq * yq) % n;\r\n    const r2 = (mp * yp - mq * yq) % n;\r\n    return [r1, r2];\r\n};\r\n\r\nconst modInverse = (a, m) => {\r\n    const [g, x] = extendedGcd(a, m);\r\n    if (g !== 1) throw new Error('No existe inverso modular');\r\n    return x % m;\r\n};\r\n\r\nconst extendedGcd = (a, b) => {\r\n    if (b === 0) return [a, 1, 0];\r\n    const [g, x1, y1] = extendedGcd(b, a % b);\r\n    return [g, y1, x1 - Math.floor(a / b) * y1];\r\n};\r\n\r\n// Implementación de RC6 en JavaScript usando DataView en lugar de Buffer\r\nconst w = 32; // Tamaño de palabra (32 bits)\r\nconst r = 20; // Número de rondas recomendado\r\nconst lgw = Math.log2(w); // Log base 2 del tamaño de palabra\r\n\r\nconst mod = 2 ** w; // Módulo para operaciones de 32 bits\r\n\r\n// Generación de claves para RC6\r\nconst generateKeySchedule = (K) => {\r\n    const P32 = 0xB7E15163;\r\n    const Q32 = 0x9E3779B9;\r\n\r\n    const t = 2 * (r + 2);\r\n    const S = new Array(t);\r\n    S[0] = P32;\r\n    for (let i = 1; i < t; i++) {\r\n        S[i] = (S[i - 1] + Q32) % mod;\r\n    }\r\n\r\n    // Usamos DataView para leer enteros de 32 bits\r\n    const L = [];\r\n    const KView = new DataView(K.buffer);\r\n    for (let i = 0; i < K.length / 4; i++) {\r\n        L[i] = KView.getUint32(i * 4, true); // true para little-endian\r\n    }\r\n\r\n    let A = 0, B = 0;\r\n    let i = 0, j = 0;\r\n    const v = 3 * Math.max(L.length, t);\r\n    for (let s = 0; s < v; s++) {\r\n        A = S[i] = rol((S[i] + A + B) % mod, 3);\r\n        B = L[j] = rol((L[j] + A + B) % mod, (A + B) % w);\r\n        i = (i + 1) % t;\r\n        j = (j + 1) % L.length;\r\n    }\r\n\r\n    return S;\r\n};\r\n\r\n// Rotación a la izquierda\r\nconst rol = (x, n) => {\r\n    return ((x << n) | (x >>> (w - n))) % mod;\r\n};\r\n\r\n// Rotación a la derecha\r\nconst ror = (x, n) => {\r\n    return ((x >>> n) | (x << (w - n))) % mod;\r\n};\r\n\r\n// Cifrado RC6\r\nconst rc6Encrypt = (plaintext, S) => {\r\n    const encoder = new TextEncoder();\r\n    const plaintextBytes = encoder.encode(plaintext); // Convertir a bytes usando TextEncoder\r\n    let A = new DataView(plaintextBytes.buffer).getUint32(0);\r\n    let B = new DataView(plaintextBytes.buffer).getUint32(4);\r\n    let C = new DataView(plaintextBytes.buffer).getUint32(8);\r\n    let D = new DataView(plaintextBytes.buffer).getUint32(12);\r\n\r\n    B = (B + S[0]) % mod;\r\n    D = (D + S[1]) % mod;\r\n\r\n    for (let i = 1; i <= r; i++) {\r\n        const t = rol((B * (2 * B + 1)) % mod, lgw);\r\n        const u = rol((D * (2 * D + 1)) % mod, lgw);\r\n        A = (rol(A ^ t, u) + S[2 * i]) % mod;\r\n        C = (rol(C ^ u, t) + S[2 * i + 1]) % mod;\r\n\r\n        [A, B, C, D] = [B, C, D, A];\r\n    }\r\n\r\n    A = (A + S[2 * r + 2]) % mod;\r\n    C = (C + S[2 * r + 3]) % mod;\r\n\r\n    const encrypted = new Uint32Array([A, B, C, D]);\r\n    return toHex(new Uint8Array(encrypted.buffer)); // Convertir a hexadecimal\r\n};\r\n\r\n// Descifrado RC6\r\nconst rc6Decrypt = (ciphertext, S) => {\r\n    const decoder = new TextDecoder();\r\n    const ciphertextBytes = Uint8Array.from(Buffer.from(ciphertext, 'hex')); // Convertir hex a bytes\r\n\r\n    let A = new DataView(ciphertextBytes.buffer).getUint32(0);\r\n    let B = new DataView(ciphertextBytes.buffer).getUint32(4);\r\n    let C = new DataView(ciphertextBytes.buffer).getUint32(8);\r\n    let D = new DataView(ciphertextBytes.buffer).getUint32(12);\r\n\r\n    C = (C - S[2 * r + 3]) % mod;\r\n    A = (A - S[2 * r + 2]) % mod;\r\n\r\n    for (let i = r; i >= 1; i--) {\r\n        [A, B, C, D] = [D, A, B, C];\r\n\r\n        const t = rol((B * (2 * B + 1)) % mod, lgw);\r\n        const u = rol((D * (2 * D + 1)) % mod, lgw);\r\n        C = ror((C - S[2 * i + 1]) % mod, t) ^ u;\r\n        A = ror((A - S[2 * i]) % mod, u) ^ t;\r\n    }\r\n\r\n    D = (D - S[1]) % mod;\r\n    B = (B - S[0]) % mod;\r\n\r\n    const decrypted = new Uint32Array([A, B, C, D]);\r\n    return decoder.decode(new Uint8Array(decrypted.buffer)); // Convertir bytes a texto\r\n};\r\n\r\n// Función de Hash usando Blake2\r\nconst hashBlake2 = (str) => {\r\n    const inputBytes = new TextEncoder().encode(str); // Convertir la cadena en bytes\r\n    const hash = blake.blake2b(inputBytes); // Generar el hash usando blakejs\r\n    return toHex(hash); // Convertir el resultado en formato hexadecimal\r\n};\r\n\r\nconst CifradoFormulario = () => {\r\n    const [name, setName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [symmetricKey, setSymmetricKey] = useState('');\r\n    const [publicKey, setPublicKey] = useState('');\r\n    const [privateKey, setPrivateKey] = useState('');\r\n    const [outputMessage, setOutputMessage] = useState('');\r\n\r\n    const handleEncryption = () => {\r\n        if (!name.trim() || !address.trim() || !password.trim()) {\r\n            toast.error(\"Por favor ingrese todos los campos\");\r\n            return;\r\n        }\r\n        if (!symmetricKey.trim() || !publicKey.trim()) {\r\n            toast.error(\"Por favor ingrese las claves\");\r\n            return;\r\n        }\r\n\r\n        const keyBytes = new TextEncoder().encode(symmetricKey); // Convertir la clave a bytes\r\n        const S = generateKeySchedule(keyBytes);\r\n\r\n        // Cifrar usando RC6\r\n        const encryptedName = rc6Encrypt(name, S);\r\n        const encryptedAddress = rc6Encrypt(address, S);\r\n        const encryptedPassword = rabinEncrypt(password, publicKey);\r\n        const hashedPassword = hashBlake2(password);\r\n\r\n        setOutputMessage(\r\n            `Nombre cifrado (RC6): ${encryptedName}\\n` +\r\n            `Dirección cifrada (RC6): ${encryptedAddress}\\n` +\r\n            `Contraseña cifrada (Rabin): ${encryptedPassword}\\n` +\r\n            `Contraseña hashed (Blake2): ${hashedPassword}`\r\n        );\r\n    };\r\n\r\n    const handleDecryption = () => {\r\n        if (!symmetricKey.trim() || !privateKey.trim()) {\r\n            toast.error(\"Por favor ingrese las claves\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const keyBytes = new TextEncoder().encode(symmetricKey); // Convertir la clave a bytes\r\n            const S = generateKeySchedule(keyBytes);\r\n\r\n            const decryptedName = rc6Decrypt(outputMessage.name, S);\r\n            const decryptedAddress = rc6Decrypt(outputMessage.address, S);\r\n            const decryptedPassword = rabinDecrypt(outputMessage.password, privateKey);\r\n\r\n            setOutputMessage(\r\n                `Nombre descifrado: ${decryptedName}\\n` +\r\n                `Dirección descifrada: ${decryptedAddress}\\n` +\r\n                `Contraseña descifrada: ${decryptedPassword}`\r\n            );\r\n        } catch (error) {\r\n            toast.error(\"Error al descifrar los datos\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\", textAlign: \"center\" }}>\r\n            <h1>Formulario de Cifrado y Hash</h1>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Dirección\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Contraseña\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave Simétrica (RC6)\"\r\n                    value={symmetricKey}\r\n                    onChange={(e) => setSymmetricKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave Pública (Rabin)\"\r\n                    value={publicKey}\r\n                    onChange={(e) => setPublicKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave Privada (Rabin)\"\r\n                    value={privateKey}\r\n                    onChange={(e) => setPrivateKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <Button\r\n                    onClick={handleEncryption}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginRight: \"10px\" }}\r\n                >\r\n                    Cifrar Datos\r\n                </Button>\r\n                <Button\r\n                    onClick={handleDecryption}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                >\r\n                    Descifrar Datos\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                {outputMessage && (\r\n                    <textarea\r\n                        readOnly\r\n                        value={outputMessage}\r\n                        style={{\r\n                            width: \"300px\",\r\n                            height: \"200px\",\r\n                            padding: \"10px\",\r\n                            fontSize: \"16px\",\r\n                            resize: \"none\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            marginBottom: \"10px\",\r\n                        }}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { CifradoFormulario };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}