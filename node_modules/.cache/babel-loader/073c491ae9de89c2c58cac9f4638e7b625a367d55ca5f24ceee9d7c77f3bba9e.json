{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis Ibarra\\\\Documents\\\\Tareas\\\\Seguridad informatica\\\\webCifrado\\\\cifrado\\\\src\\\\CifradoFormulario.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport toast from \"react-hot-toast\";\nimport CryptoJS from \"crypto-js\";\nimport blake from 'blakejs';\n\n// Función para convertir una cadena a hexadecimal sin usar Buffer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stringToHex = str => {\n  return str.split('').map(c => c.charCodeAt(0).toString(16)).join('');\n};\n\n// Función para convertir un array de bytes a hexadecimal\nconst toHex = byteArray => {\n  return Array.from(byteArray, byte => {\n    return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n  }).join('');\n};\n\n// Implementación de Rabin\nconst generateRabinKeys = () => {\n  const p = 61;\n  const q = 53;\n  const n = p * q;\n  return {\n    p,\n    q,\n    n\n  };\n};\nconst rabinEncrypt = (message, n) => {\n  // Convertir el mensaje a hexadecimal y luego a un entero\n  const hexMessage = stringToHex(message);\n  const m = parseInt(hexMessage, 16); // Convertir el mensaje a entero usando hexadecimal\n  const c = m ** 2 % parseInt(n); // Cifrar\n  return c.toString();\n};\nconst rabinDecrypt = (cipher, p, q) => {\n  const n = parseInt(p * q);\n  const c = parseInt(cipher);\n  const mp = modSqrt(c, p);\n  const mq = modSqrt(c, q);\n  const [r1, r2] = chineseRemainderTheorem(mp, mq, p, q, n);\n  return [r1, r2];\n};\nconst modSqrt = (a, p) => {\n  return Math.pow(a, (p + 1) / 4) % p;\n};\nconst chineseRemainderTheorem = (mp, mq, p, q, n) => {\n  const yp = q * modInverse(q, p);\n  const yq = p * modInverse(p, q);\n  const r1 = (mp * yp + mq * yq) % n;\n  const r2 = (mp * yp - mq * yq) % n;\n  return [r1, r2];\n};\nconst modInverse = (a, m) => {\n  const [g, x] = extendedGcd(a, m);\n  if (g !== 1) throw new Error('No existe inverso modular');\n  return x % m;\n};\nconst extendedGcd = (a, b) => {\n  if (b === 0) return [a, 1, 0];\n  const [g, x1, y1] = extendedGcd(b, a % b);\n  return [g, y1, x1 - Math.floor(a / b) * y1];\n};\n\n// Función de Hash usando Blake2\nconst hashBlake2 = str => {\n  const inputBytes = new TextEncoder().encode(str); // Convertir la cadena en bytes\n  const hash = blake.blake2b(inputBytes); // Generar el hash usando blakejs\n  return toHex(hash); // Convertir el resultado en formato hexadecimal\n};\nconst CifradoFormulario = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [symmetricKey, setSymmetricKey] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [outputMessage, setOutputMessage] = useState('');\n\n  // Cifrado simétrico con RC6\n  const rc6Cipher = (str, key, isEncrypting) => {\n    try {\n      if (isEncrypting) {\n        return CryptoJS.RC6.encrypt(str, key).toString();\n      } else {\n        return CryptoJS.RC6.decrypt(str, key).toString(CryptoJS.enc.Utf8);\n      }\n    } catch (error) {\n      toast.error(\"Error en el cifrado/desbloqueo simétrico\");\n      return '';\n    }\n  };\n  const handleEncryption = () => {\n    if (!name.trim() || !address.trim() || !password.trim()) {\n      toast.error(\"Por favor ingrese todos los campos\");\n      return;\n    }\n    if (!symmetricKey.trim() || !publicKey.trim()) {\n      toast.error(\"Por favor ingrese las claves\");\n      return;\n    }\n    const encryptedName = rc6Cipher(name, symmetricKey, true);\n    const encryptedAddress = rc6Cipher(address, symmetricKey, true);\n    const encryptedPassword = rabinEncrypt(password, publicKey);\n    const hashedPassword = hashBlake2(password);\n    setOutputMessage(`Nombre cifrado (RC6): ${encryptedName}\\n` + `Dirección cifrada (RC6): ${encryptedAddress}\\n` + `Contraseña cifrada (Rabin): ${encryptedPassword}\\n` + `Contraseña hashed (Blake2): ${hashedPassword}`);\n  };\n  const handleDecryption = () => {\n    if (!symmetricKey.trim() || !privateKey.trim()) {\n      toast.error(\"Por favor ingrese las claves\");\n      return;\n    }\n    try {\n      const decryptedName = rc6Cipher(outputMessage.name, symmetricKey, false);\n      const decryptedAddress = rc6Cipher(outputMessage.address, symmetricKey, false);\n      const decryptedPassword = rabinDecrypt(outputMessage.password, privateKey);\n      setOutputMessage(`Nombre descifrado: ${decryptedName}\\n` + `Dirección descifrada: ${decryptedAddress}\\n` + `Contraseña descifrada: ${decryptedPassword}`);\n    } catch (error) {\n      toast.error(\"Error al descifrar los datos\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Formulario de Cifrado y Hash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Direcci\\xF3n\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave Sim\\xE9trica (RC6)\",\n        value: symmetricKey,\n        onChange: e => setSymmetricKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave P\\xFAblica (Rabin)\",\n        value: publicKey,\n        onChange: e => setPublicKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave Privada (Rabin)\",\n        value: privateKey,\n        onChange: e => setPrivateKey(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEncryption,\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Cifrar Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDecryption,\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Descifrar Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: outputMessage && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: outputMessage,\n        style: {\n          width: \"300px\",\n          height: \"200px\",\n          padding: \"10px\",\n          fontSize: \"16px\",\n          resize: \"none\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(CifradoFormulario, \"CmOJAC4/gAd5ntpZH2dRw/0Nydw=\");\n_c = CifradoFormulario;\nexport { CifradoFormulario };\nvar _c;\n$RefreshReg$(_c, \"CifradoFormulario\");","map":{"version":3,"names":["useState","Button","toast","CryptoJS","blake","jsxDEV","_jsxDEV","stringToHex","str","split","map","c","charCodeAt","toString","join","toHex","byteArray","Array","from","byte","slice","generateRabinKeys","p","q","n","rabinEncrypt","message","hexMessage","m","parseInt","rabinDecrypt","cipher","mp","modSqrt","mq","r1","r2","chineseRemainderTheorem","a","Math","pow","yp","modInverse","yq","g","x","extendedGcd","Error","b","x1","y1","floor","hashBlake2","inputBytes","TextEncoder","encode","hash","blake2b","CifradoFormulario","_s","name","setName","address","setAddress","password","setPassword","symmetricKey","setSymmetricKey","publicKey","setPublicKey","privateKey","setPrivateKey","outputMessage","setOutputMessage","rc6Cipher","key","isEncrypting","RC6","encrypt","decrypt","enc","Utf8","error","handleEncryption","trim","encryptedName","encryptedAddress","encryptedPassword","hashedPassword","handleDecryption","decryptedName","decryptedAddress","decryptedPassword","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","width","fontSize","onClick","variant","color","marginRight","readOnly","height","resize","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Luis Ibarra/Documents/Tareas/Seguridad informatica/webCifrado/cifrado/src/CifradoFormulario.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport toast from \"react-hot-toast\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport blake from 'blakejs';\r\n\r\n// Función para convertir una cadena a hexadecimal sin usar Buffer\r\nconst stringToHex = (str) => {\r\n    return str.split('').map(c => c.charCodeAt(0).toString(16)).join('');\r\n};\r\n\r\n// Función para convertir un array de bytes a hexadecimal\r\nconst toHex = (byteArray) => {\r\n    return Array.from(byteArray, (byte) => {\r\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n    }).join('');\r\n};\r\n\r\n// Implementación de Rabin\r\nconst generateRabinKeys = () => {\r\n    const p = 61;\r\n    const q = 53;\r\n    const n = p * q;\r\n    return { p, q, n };\r\n};\r\n\r\nconst rabinEncrypt = (message, n) => {\r\n    // Convertir el mensaje a hexadecimal y luego a un entero\r\n    const hexMessage = stringToHex(message);\r\n    const m = parseInt(hexMessage, 16); // Convertir el mensaje a entero usando hexadecimal\r\n    const c = (m ** 2) % parseInt(n); // Cifrar\r\n    return c.toString();\r\n};\r\n\r\nconst rabinDecrypt = (cipher, p, q) => {\r\n    const n = parseInt(p * q);\r\n    const c = parseInt(cipher);\r\n    const mp = modSqrt(c, p);\r\n    const mq = modSqrt(c, q);\r\n    const [r1, r2] = chineseRemainderTheorem(mp, mq, p, q, n);\r\n    return [r1, r2];\r\n};\r\n\r\nconst modSqrt = (a, p) => {\r\n    return Math.pow(a, (p + 1) / 4) % p;\r\n};\r\n\r\nconst chineseRemainderTheorem = (mp, mq, p, q, n) => {\r\n    const yp = q * modInverse(q, p);\r\n    const yq = p * modInverse(p, q);\r\n    const r1 = (mp * yp + mq * yq) % n;\r\n    const r2 = (mp * yp - mq * yq) % n;\r\n    return [r1, r2];\r\n};\r\n\r\nconst modInverse = (a, m) => {\r\n    const [g, x] = extendedGcd(a, m);\r\n    if (g !== 1) throw new Error('No existe inverso modular');\r\n    return x % m;\r\n};\r\n\r\nconst extendedGcd = (a, b) => {\r\n    if (b === 0) return [a, 1, 0];\r\n    const [g, x1, y1] = extendedGcd(b, a % b);\r\n    return [g, y1, x1 - Math.floor(a / b) * y1];\r\n};\r\n\r\n// Función de Hash usando Blake2\r\nconst hashBlake2 = (str) => {\r\n    const inputBytes = new TextEncoder().encode(str); // Convertir la cadena en bytes\r\n    const hash = blake.blake2b(inputBytes); // Generar el hash usando blakejs\r\n    return toHex(hash); // Convertir el resultado en formato hexadecimal\r\n};\r\n\r\nconst CifradoFormulario = () => {\r\n    const [name, setName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [symmetricKey, setSymmetricKey] = useState('');\r\n    const [publicKey, setPublicKey] = useState('');\r\n    const [privateKey, setPrivateKey] = useState('');\r\n    const [outputMessage, setOutputMessage] = useState('');\r\n\r\n    // Cifrado simétrico con RC6\r\n    const rc6Cipher = (str, key, isEncrypting) => {\r\n        try {\r\n            if (isEncrypting) {\r\n                return CryptoJS.RC6.encrypt(str, key).toString();\r\n            } else {\r\n                return CryptoJS.RC6.decrypt(str, key).toString(CryptoJS.enc.Utf8);\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Error en el cifrado/desbloqueo simétrico\");\r\n            return '';\r\n        }\r\n    };\r\n\r\n    const handleEncryption = () => {\r\n        if (!name.trim() || !address.trim() || !password.trim()) {\r\n            toast.error(\"Por favor ingrese todos los campos\");\r\n            return;\r\n        }\r\n        if (!symmetricKey.trim() || !publicKey.trim()) {\r\n            toast.error(\"Por favor ingrese las claves\");\r\n            return;\r\n        }\r\n\r\n        const encryptedName = rc6Cipher(name, symmetricKey, true);\r\n        const encryptedAddress = rc6Cipher(address, symmetricKey, true);\r\n        const encryptedPassword = rabinEncrypt(password, publicKey);\r\n        const hashedPassword = hashBlake2(password);\r\n\r\n        setOutputMessage(\r\n            `Nombre cifrado (RC6): ${encryptedName}\\n` +\r\n            `Dirección cifrada (RC6): ${encryptedAddress}\\n` +\r\n            `Contraseña cifrada (Rabin): ${encryptedPassword}\\n` +\r\n            `Contraseña hashed (Blake2): ${hashedPassword}`\r\n        );\r\n    };\r\n\r\n    const handleDecryption = () => {\r\n        if (!symmetricKey.trim() || !privateKey.trim()) {\r\n            toast.error(\"Por favor ingrese las claves\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const decryptedName = rc6Cipher(outputMessage.name, symmetricKey, false);\r\n            const decryptedAddress = rc6Cipher(outputMessage.address, symmetricKey, false);\r\n            const decryptedPassword = rabinDecrypt(outputMessage.password, privateKey);\r\n\r\n            setOutputMessage(\r\n                `Nombre descifrado: ${decryptedName}\\n` +\r\n                `Dirección descifrada: ${decryptedAddress}\\n` +\r\n                `Contraseña descifrada: ${decryptedPassword}`\r\n            );\r\n        } catch (error) {\r\n            toast.error(\"Error al descifrar los datos\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\", textAlign: \"center\" }}>\r\n            <h1>Formulario de Cifrado y Hash</h1>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Dirección\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Contraseña\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave Simétrica (RC6)\"\r\n                    value={symmetricKey}\r\n                    onChange={(e) => setSymmetricKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave Pública (Rabin)\"\r\n                    value={publicKey}\r\n                    onChange={(e) => setPublicKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Clave Privada (Rabin)\"\r\n                    value={privateKey}\r\n                    onChange={(e) => setPrivateKey(e.target.value)}\r\n                    style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <Button\r\n                    onClick={handleEncryption}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginRight: \"10px\" }}\r\n                >\r\n                    Cifrar Datos\r\n                </Button>\r\n                <Button\r\n                    onClick={handleDecryption}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                >\r\n                    Descifrar Datos\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                {outputMessage && (\r\n                    <textarea\r\n                        readOnly\r\n                        value={outputMessage}\r\n                        style={{\r\n                            width: \"300px\",\r\n                            height: \"200px\",\r\n                            padding: \"10px\",\r\n                            fontSize: \"16px\",\r\n                            resize: \"none\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            marginBottom: \"10px\",\r\n                        }}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { CifradoFormulario };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}