{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis Ibarra\\\\Documents\\\\Tareas\\\\Seguridad informatica\\\\webCifrado\\\\cifrado\\\\src\\\\CifradoCesar.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CifradoCesar = () => {\n  _s();\n  const [message, setMessage] = useState(''); // Estado para el mensaje ingresado\n  const [shift, setShift] = useState(0); // Estado para la clave de desplazamiento\n  const [outputMessage, setOutputMessage] = useState(''); // Estado para el mensaje cifrado o descifrado\n  const [isEncrypting, setIsEncrypting] = useState(true); // Estado para controlar si se cifra o descifra\n\n  // Función para aplicar el Cifrado César (cifrado o descifrado)\n  const caesarCipher = (str, shift, isEncrypting) => {\n    const direction = isEncrypting ? 1 : -1; // Definir dirección para cifrar o descifrar\n    return str.split('').map(char => {\n      if (/[a-zA-Z]/.test(char)) {\n        const base = char === char.toLowerCase() ? 97 : 65; // Código ASCII de 'a' o 'A'\n        return String.fromCharCode((char.charCodeAt(0) - base + direction * shift + 26) % 26 + base);\n      }\n      return char; // Devolver otros caracteres (como espacios o símbolos) sin modificar\n    }).join('');\n  };\n\n  // Función que se ejecuta al hacer clic en el botón de cifrar o descifrar\n  const handleAction = () => {\n    const result = caesarCipher(message, parseInt(shift, 10), isEncrypting);\n    setOutputMessage(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cifrado C\\xE9sar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ingresa el mensaje\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Clave (desplazamiento)\",\n        value: shift,\n        onChange: e => setShift(e.target.value),\n        style: {\n          padding: \"10px\",\n          width: \"300px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsEncrypting(true);\n          handleAction();\n        },\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          marginRight: \"10px\"\n        },\n        children: \"Cifrar Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsEncrypting(false);\n          handleAction();\n        },\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\"\n        },\n        children: \"Descifrar Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), outputMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: isEncrypting ? \"Mensaje Cifrado:\" : \"Mensaje Descifrado:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        children: outputMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CifradoCesar, \"FaHfQvKbfHkziPH3JYp9kaeQtWg=\");\n_c = CifradoCesar;\nexport { CifradoCesar };\nvar _c;\n$RefreshReg$(_c, \"CifradoCesar\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","CifradoCesar","_s","message","setMessage","shift","setShift","outputMessage","setOutputMessage","isEncrypting","setIsEncrypting","caesarCipher","str","direction","split","map","char","test","base","toLowerCase","String","fromCharCode","charCodeAt","join","handleAction","result","parseInt","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","width","fontSize","onClick","marginRight","marginTop","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Luis Ibarra/Documents/Tareas/Seguridad informatica/webCifrado/cifrado/src/CifradoCesar.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst CifradoCesar = () => {\r\n  const [message, setMessage] = useState(''); // Estado para el mensaje ingresado\r\n  const [shift, setShift] = useState(0); // Estado para la clave de desplazamiento\r\n  const [outputMessage, setOutputMessage] = useState(''); // Estado para el mensaje cifrado o descifrado\r\n  const [isEncrypting, setIsEncrypting] = useState(true); // Estado para controlar si se cifra o descifra\r\n\r\n  // Función para aplicar el Cifrado César (cifrado o descifrado)\r\n  const caesarCipher = (str, shift, isEncrypting) => {\r\n    const direction = isEncrypting ? 1 : -1; // Definir dirección para cifrar o descifrar\r\n    return str\r\n      .split('')\r\n      .map((char) => {\r\n        if (/[a-zA-Z]/.test(char)) {\r\n          const base = char === char.toLowerCase() ? 97 : 65; // Código ASCII de 'a' o 'A'\r\n          return String.fromCharCode(\r\n            ((char.charCodeAt(0) - base + direction * shift + 26) % 26) + base\r\n          );\r\n        }\r\n        return char; // Devolver otros caracteres (como espacios o símbolos) sin modificar\r\n      })\r\n      .join('');\r\n  };\r\n\r\n  // Función que se ejecuta al hacer clic en el botón de cifrar o descifrar\r\n  const handleAction = () => {\r\n    const result = caesarCipher(message, parseInt(shift, 10), isEncrypting);\r\n    setOutputMessage(result);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", textAlign: \"center\" }}>\r\n      <h1>Cifrado César</h1>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ingresa el mensaje\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n        />\r\n      </div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Clave (desplazamiento)\"\r\n          value={shift}\r\n          onChange={(e) => setShift(e.target.value)}\r\n          style={{ padding: \"10px\", width: \"300px\", fontSize: \"16px\" }}\r\n        />\r\n      </div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <button\r\n          onClick={() => {\r\n            setIsEncrypting(true);\r\n            handleAction();\r\n          }}\r\n          style={{ padding: \"10px 20px\", fontSize: \"16px\", marginRight: \"10px\" }}\r\n        >\r\n          Cifrar Mensaje\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setIsEncrypting(false);\r\n            handleAction();\r\n          }}\r\n          style={{ padding: \"10px 20px\", fontSize: \"16px\" }}\r\n        >\r\n          Descifrar Mensaje\r\n        </button>\r\n      </div>\r\n      {outputMessage && (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h3>{isEncrypting ? \"Mensaje Cifrado:\" : \"Mensaje Descifrado:\"}</h3>\r\n          <p style={{ fontSize: \"18px\", fontWeight: \"bold\" }}>{outputMessage}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CifradoCesar };\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMa,YAAY,GAAGA,CAACC,GAAG,EAAEP,KAAK,EAAEI,YAAY,KAAK;IACjD,MAAMI,SAAS,GAAGJ,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzC,OAAOG,GAAG,CACPE,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAEC,IAAI,IAAK;MACb,IAAI,UAAU,CAACC,IAAI,CAACD,IAAI,CAAC,EAAE;QACzB,MAAME,IAAI,GAAGF,IAAI,KAAKA,IAAI,CAACG,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACpD,OAAOC,MAAM,CAACC,YAAY,CACvB,CAACL,IAAI,CAACM,UAAU,CAAC,CAAC,CAAC,GAAGJ,IAAI,GAAGL,SAAS,GAAGR,KAAK,GAAG,EAAE,IAAI,EAAE,GAAIa,IAChE,CAAC;MACH;MACA,OAAOF,IAAI,CAAC,CAAC;IACf,CAAC,CAAC,CACDO,IAAI,CAAC,EAAE,CAAC;EACb,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,MAAM,GAAGd,YAAY,CAACR,OAAO,EAAEuB,QAAQ,CAACrB,KAAK,EAAE,EAAE,CAAC,EAAEI,YAAY,CAAC;IACvED,gBAAgB,CAACiB,MAAM,CAAC;EAC1B,CAAC;EAED,oBACEzB,OAAA;IAAK2B,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnD9B,OAAA;MAAA8B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlC,OAAA;MAAK2B,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,eACnC9B,OAAA;QACEoC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAEnC,OAAQ;QACfoC,QAAQ,EAAGC,CAAC,IAAKpC,UAAU,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CX,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEc,KAAK,EAAE,OAAO;UAAEC,QAAQ,EAAE;QAAO;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlC,OAAA;MAAK2B,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,eACnC9B,OAAA;QACEoC,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,wBAAwB;QACpCC,KAAK,EAAEjC,KAAM;QACbkC,QAAQ,EAAGC,CAAC,IAAKlC,QAAQ,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CX,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEc,KAAK,EAAE,OAAO;UAAEC,QAAQ,EAAE;QAAO;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlC,OAAA;MAAK2B,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,gBACnC9B,OAAA;QACE4C,OAAO,EAAEA,CAAA,KAAM;UACblC,eAAe,CAAC,IAAI,CAAC;UACrBc,YAAY,CAAC,CAAC;QAChB,CAAE;QACFG,KAAK,EAAE;UAAEC,OAAO,EAAE,WAAW;UAAEe,QAAQ,EAAE,MAAM;UAAEE,WAAW,EAAE;QAAO,CAAE;QAAAf,QAAA,EACxE;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTlC,OAAA;QACE4C,OAAO,EAAEA,CAAA,KAAM;UACblC,eAAe,CAAC,KAAK,CAAC;UACtBc,YAAY,CAAC,CAAC;QAChB,CAAE;QACFG,KAAK,EAAE;UAAEC,OAAO,EAAE,WAAW;UAAEe,QAAQ,EAAE;QAAO,CAAE;QAAAb,QAAA,EACnD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACL3B,aAAa,iBACZP,OAAA;MAAK2B,KAAK,EAAE;QAAEmB,SAAS,EAAE;MAAO,CAAE;MAAAhB,QAAA,gBAChC9B,OAAA;QAAA8B,QAAA,EAAKrB,YAAY,GAAG,kBAAkB,GAAG;MAAqB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpElC,OAAA;QAAG2B,KAAK,EAAE;UAAEgB,QAAQ,EAAE,MAAM;UAAEI,UAAU,EAAE;QAAO,CAAE;QAAAjB,QAAA,EAAEvB;MAAa;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChC,EAAA,CA9EID,YAAY;AAAA+C,EAAA,GAAZ/C,YAAY;AAgFlB,SAASA,YAAY;AAAG,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}