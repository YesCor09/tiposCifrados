{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis Ibarra\\\\Documents\\\\Tareas\\\\Seguridad informatica\\\\webCifrado\\\\cifrado\\\\src\\\\CifradoCesar.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CifradoCesar = () => {\n  _s();\n  const [message, setMessage] = useState(''); // Estado para el mensaje ingresado\n  const [shift, setShift] = useState(0); // Estado para la clave de desplazamiento\n  const [encryptedMessage, setEncryptedMessage] = useState(''); // Estado para el mensaje cifrado\n\n  // Función para aplicar el Cifrado César\n  const caesarCipher = (str, shift) => {\n    return str.split('').map(char => {\n      if (/[a-zA-Z]/.test(char)) {\n        // Verificar si es una letra\n        const base = char === char.toLowerCase() ? 97 : 65; // Código ASCII de 'a' o 'A'\n        return String.fromCharCode((char.charCodeAt(0) - base + shift) % 26 + base);\n      }\n      return char; // Devolver otros caracteres (como espacios o símbolos) sin modificar\n    }).join('');\n  };\n\n  // Función que se ejecuta al hacer clic en el botón de cifrar\n  const handleEncrypt = () => {\n    const encrypted = caesarCipher(message, parseInt(shift, 10));\n    setEncryptedMessage(encrypted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cifrado C\\xE9sar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ingresa el mensaje\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        style: {\n          padding: '10px',\n          width: '300px',\n          fontSize: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Clave (desplazamiento)\",\n        value: shift,\n        onChange: e => setShift(e.target.value),\n        style: {\n          padding: '10px',\n          width: '300px',\n          fontSize: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEncrypt,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px'\n      },\n      children: \"Cifrar Mensaje\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), encryptedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mensaje Cifrado:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        children: encryptedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(CifradoCesar, \"gh9jJkc8jPMn5dv2twgmfP5os1E=\");\n_c = CifradoCesar;\nexport { CifradoCesar };\nvar _c;\n$RefreshReg$(_c, \"CifradoCesar\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","CifradoCesar","_s","message","setMessage","shift","setShift","encryptedMessage","setEncryptedMessage","caesarCipher","str","split","map","char","test","base","toLowerCase","String","fromCharCode","charCodeAt","join","handleEncrypt","encrypted","parseInt","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","width","fontSize","onClick","marginTop","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Luis Ibarra/Documents/Tareas/Seguridad informatica/webCifrado/cifrado/src/CifradoCesar.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst CifradoCesar = () => {\r\n\r\n    const [message, setMessage] = useState(''); // Estado para el mensaje ingresado\r\n    const [shift, setShift] = useState(0); // Estado para la clave de desplazamiento\r\n    const [encryptedMessage, setEncryptedMessage] = useState(''); // Estado para el mensaje cifrado\r\n\r\n    // Función para aplicar el Cifrado César\r\n    const caesarCipher = (str, shift) => {\r\n        return str\r\n        .split('')\r\n        .map(char => {\r\n            if (/[a-zA-Z]/.test(char)) { // Verificar si es una letra\r\n                const base = char === char.toLowerCase() ? 97 : 65; // Código ASCII de 'a' o 'A'\r\n                return String.fromCharCode(((char.charCodeAt(0) - base + shift) % 26) + base);\r\n            }\r\n            return char; // Devolver otros caracteres (como espacios o símbolos) sin modificar\r\n        })\r\n        .join('');\r\n    };\r\n\r\n    // Función que se ejecuta al hacer clic en el botón de cifrar\r\n    const handleEncrypt = () => {\r\n        const encrypted = caesarCipher(message, parseInt(shift, 10));\r\n        setEncryptedMessage(encrypted);\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', textAlign: 'center' }}>\r\n        <h1>Cifrado César</h1>\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el mensaje\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            style={{ padding: '10px', width: '300px', fontSize: '16px' }}\r\n            />\r\n        </div>\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <input\r\n            type=\"number\"\r\n            placeholder=\"Clave (desplazamiento)\"\r\n            value={shift}\r\n            onChange={(e) => setShift(e.target.value)}\r\n            style={{ padding: '10px', width: '300px', fontSize: '16px' }}\r\n            />\r\n        </div>\r\n        <button onClick={handleEncrypt} style={{ padding: '10px 20px', fontSize: '16px' }}>\r\n            Cifrar Mensaje\r\n        </button>\r\n        {encryptedMessage && (\r\n            <div style={{ marginTop: '20px' }}>\r\n            <h3>Mensaje Cifrado:</h3>\r\n            <p style={{ fontSize: '18px', fontWeight: 'bold' }}>{encryptedMessage}</p>\r\n            </div>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {CifradoCesar}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}